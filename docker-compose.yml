# docker-compose.yml
version: '3.8' # Specify docker-compose version

services:
  # PostgreSQL Database Service
  postgres-db:
    image: postgres:15-alpine # Use official PostgreSQL image (version 15 on Alpine Linux)
    container_name: codeyarn-postgres-db # Assign a specific container name
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    environment:
      # Define environment variables for database setup
      # These should match the credentials in packages/db/.env DATABASE_URL
      POSTGRES_USER: codeyarn_user # Replace with your desired database username
      POSTGRES_PASSWORD: codeyarn_password # Replace with a strong password
      POSTGRES_DB: codeyarn_db # Replace with your desired database name
    volumes:
      # Mount a volume to persist database data even when the container stops/restarts
      - postgres-data:/var/lib/postgresql/data
    networks:
      # Optional: Define a network if other services need to connect easily
      - codeyarn-network
    # Optional: Add healthcheck to ensure DB is ready before apps connect
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped # Restart policy

  # Optional: Add other services later (e.g., Redis for caching/queues)
  # redis:
  #   image: redis:alpine
  #   container_name: codeyarn-redis
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - codeyarn-network
  #   restart: unless-stopped

# Define named volume for data persistence
volumes:
  postgres-data:
    driver: local # Use the local driver for the volume

# Define custom network (optional)
networks:
  codeyarn-network:
    driver: bridge

