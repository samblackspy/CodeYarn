# nginx.conf (located in project root)

user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # SSL Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Generate with: openssl dhparam -out /etc/letsencrypt/ssl-dhparams.pem 4096

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

    # This is a temporary server block for handling ACME challenges before SSL is set up.
    # And to redirect HTTP to HTTPS once SSL is active.
    server {
        listen 80;
        listen [::]:80;
        server_name codeyarn.xyz www.codeyarn.xyz;

        # For Let's Encrypt ACME challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name codeyarn.xyz www.codeyarn.xyz;

        # SSL certificate files (paths inside the Nginx container)
        # Ensure these paths match where Certbot places them and how they are mounted in docker-compose.
        ssl_certificate /etc/letsencrypt/live/codeyarn.xyz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/codeyarn.xyz/privkey.pem;
        # ssl_trusted_certificate /etc/letsencrypt/live/codeyarn.xyz/chain.pem; # Usually fullchain.pem includes this

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; ..." always; # Customize CSP
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # Enable HSTS after testing

        # Proxy to Next.js frontend (web service)
        location / {
            proxy_pass http://web:3000; # 'web' is the service name, 3000 is its internal port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
        }

        # Proxy API requests to backend (server service)
        location /api/ {
            # Add trailing slash to proxy_pass if the location has it and you want path preserved.
            proxy_pass http://server:3001/api/; # 'server' is the service name, 3001 is its internal port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy WebSocket requests to backend (server service)
        location /socket.io/ {
            proxy_pass http://server:3001/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host; # Important for socket.io
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400s; # Prevent timeout for long-lived connections
            proxy_send_timeout 86400s;
        }
    }
}
